# TODO

### try a CNN
- Try Faster R-CNN
    * Install from https://github.com/rbgirshick/py-faster-rcnn
        - cd caffe-fast-rcnn/python; sudo pip install -r requirements.txt
    * See CPU_ONLY=1 : https://github.com/rbgirshick/py-faster-rcnn/issues/123
    * Download pretrained models
    * cd tools; ./demo.py --cpu

- Read the threory :
    * http://arxiv.org/pdf/1506.01497v3.pdf
    * http://cs231n.github.io/neural-networks-1/ etc

- Train Faster R-CNN on 10 classes
    * Understand the format of the training data needed by py-faster-rcnn
    * Detect on train image the human -> define a ROI with a person
      - Use pretrained vgg16 model to detect a person on the image (heavy)
      -
    * Train RCNN using defined ROI

- Finetunning existing models:
    * Tried as in caffe example 'finetune flickr style' to finetune the imagenet model/weights
    on my data -> loss = ~2.30
    *  Tried as in caffe example 'finetune flickr style' to finetune the resnet-152 model/weights
    on my data -> loss = ~2.30

- Train ResNet-50/101/152 on my data
    * 

### Pose estimation

- Assert that there is a package that can give quantative pose positions



### Test XGBoost library

- Need good features anyway
